{"version":3,"file":"static/js/movies-page.b72a4a2e.chunk.js","mappings":"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","sources":["components/MovieGallary/MovieGallary.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/SearchBarFilm/SearchBarFilm.module.css","components/SearchBarFilm/SearchBarFilm.js","pages/MoviesPage/MoviesPage.js","services/themoviedbAPI/requestAPI.js","services/themoviedbAPI/themoviedbAPI.js","utils/mapper.js","utils/messenger.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\"\nimport { messenger } from \"utils/messenger\";\nimport PropTypes from \"prop-types\"\n\nexport default function MovieGallary({ movies }) {\n    const location = useLocation();\n\n    if (movies.length === 0) {\n        messenger.alertMessage('No film found');\n        return;\n    }\n    return (\n        <ul>\n            {movies.map(({ id, title }) => {\n                return (\n                    <li key={id}>\n                        <Link\n                            to={`/movies/${id}`}\n                            state={{\n                                from: {\n                                    location,\n                                },\n                            }}\n                        >{title}</Link>\n                    </li>\n                )\n            })}\n        </ul >\n    )\n}\n\nMovieGallary.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        }).isRequired\n    )\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {};","import { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './SearchBarFilm.module.css'\n\nexport default function SearchBarFilm({ onSubmitFormHandler }) {\n    const [value, setValue] = useState('');\n    const changeValueHandler = ({ target }) => {\n        setValue(target.value);\n    }\n    const reset = () => {\n        setValue('');\n    }\n    const submitFormHandler = (event) => {\n        event.preventDefault();\n        onSubmitFormHandler(value);\n        reset();\n    }\n    return (\n        <form className={styles['search-bar']} onSubmit={submitFormHandler}>\n            <input type=\"text\" onChange={changeValueHandler} value={value} autoComplete='off' autoFocus placeholder='Search film' />\n            <button type='submit' className={styles.button} >\n                <span>Search</span>\n            </button>\n        </form>\n    )\n}\n\nSearchBarFilm.propTypes = {\n    onSubmitFormHandler: PropTypes.func.isRequired,\n}","\nimport { useEffect, useState } from \"react\";\n\nimport MovieGallary from \"components/MovieGallary\";\nimport SearchBarFilm from \"components/SearchBarFilm\";\nimport Loader from \"components/Loader\";\n\nimport themoviedbAPI from \"services/themoviedbAPI/themoviedbAPI\";\nimport { mapper } from \"utils/mapper\";\nimport { messenger } from \"utils/messenger\";\nimport { createSearchParams, useLocation, useNavigate } from \"react-router-dom\";\n\n// machine state\nconst STATUS = {\n    idle: 'idle',\n    resolve: 'resolve',\n    reject: 'reject',\n    pending: 'pending',\n}\n\n/* function MoviesPage\ndo: - render search form\n    - save \"searchValue\" to url as search parameter\n        \"query=searchValue\"\n    - if \"query\" is present do request with \"searchValue\"\n        else return\n    - render result of \nuse: useState() - save \"movies\" - result array of search request\n                - save 'error' - error object if request return error\n                - save 'status' - machine state of request procedure\n    useLocation() - get current url location\n    useNavigate() - refresh url for search parameter\n    URLSearchParams() - get search parameter \n    createSearchParams().toString() - produce string type: query=searchValue \nout: - search form\n    \"pending\" - Loader\n    \"resolve\" - Gallary\n    \"reject\" - Error\n */\nexport default function MoviesPage() {\n\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(STATUS.idle);\n\n    const location = useLocation();\n    const navigate = useNavigate();\n\n    const searchValue = new URLSearchParams(location.search).get('query') ?? '';\n\n    /* \n    dp: - searchValue\n        - page\n    do: - if \"searchValue\" empty - early return\n        - fetch \n    */\n    useEffect(() => {\n        if (searchValue === \"\") {\n            return;\n        }\n\n        fetchSearch(searchValue);\n\n        /* function fetchSearch\n        in: - search value\n        do: - set status=pending\n            - fetch\n                <> set movies\n                <> set status=resolve\n            <-> if error\n                <> set error\n                <> set status=reject\n        */\n        function fetchSearch(value) {\n            setStatus(STATUS.pending);\n            themoviedbAPI\n                .fetchByName(searchValue)\n                .then(({ results }) => {\n                    setMovies((prev) => [...prev, ...mapper(results)])\n                    setStatus(STATUS.resolve);\n                })\n                .catch(error => {\n                    setStatus(STATUS.reject);\n                    setError(error);\n                })\n        }\n    }, [searchValue])\n\n\n    /* function configSearchParams\n        in: - value - search value\n        do: - create search parameters to url\n            - set search parameter to current url\n    */\n    const configSearchParams = (value) => {\n        const seachParam = {\n            query: value.toLowerCase(),\n        };\n        navigate({\n            ...location,\n            search: createSearchParams(seachParam).toString(),\n        });\n    }\n\n    /* function resetStates\n    do: reset to initial state\n     */\n    const resetStates = () => {\n        setMovies([]);\n        setStatus(STATUS.idle);\n        setError(null);\n    }\n\n    /*function submitSearchForm\n    in: -value- search parameter\n    do: - if search parameter is empty early return\n        - reset to initial state\n        - configure search parameter into url\n          */\n    const submitSearchForm = (value) => {\n        if (value.trim() === '') {\n            messenger.alertMessage('Input valid value')\n            return;\n        }\n        resetStates();\n        configSearchParams(value);\n    }\n\n    return (\n        <>\n            <SearchBarFilm onSubmitFormHandler={submitSearchForm} />\n            {status === STATUS.pending && <Loader />}\n            {status === STATUS.resolve && <MovieGallary movies={movies} />}\n            {status === STATUS.reject && messenger.errorMessage(error)}\n        </>\n    )\n}","const http = {\n    async get(url) {\n        const response = await fetch(url);\n        if (response.ok) {\n            return await response.json();\n        }\n        return Promise.reject(new Error('Not found'));\n    }\n};\n\nexport default http;","// trending movies : 'https://api.themoviedb.org/3/trending/movie/day?api_key=<<api_key>>'\n// search movie: 'https://api.themoviedb.org/3/search/movie?api_key=70c5c640dcd47438a9460ce1b8e1a5b1&language=en-US&page=1&include_adult=false&query=king'\n// film info: 'https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US'\n// reviews: 'https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1'\n// credits: 'https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US'\n\nimport http from './requestAPI'\n\nconst API_KEY = '70c5c640dcd47438a9460ce1b8e1a5b1';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst DEFAULT_LANGUAGE = 'en-US'\n\nexport const fetchTrendingMovies = (page = 1) => {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`;\n    return http.get(url);\n}\nexport const fetchByName = (value, page = 1, language = DEFAULT_LANGUAGE) => {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=${language}&page=${page}&include_adult=false&query=${value}`;\n    return http.get(url);\n}\nexport const fetchFilmDetails = (movieId, language = DEFAULT_LANGUAGE) => {\n    const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=${language}`;\n    return http.get(url);\n}\nexport const fetchFilmReviews = (movieId, language = DEFAULT_LANGUAGE) => {\n    const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=${language}`;\n    return http.get(url);\n}\nexport const fetchFilmCredits = (movieId, language = DEFAULT_LANGUAGE) => {\n    const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=${language}`;\n    return http.get(url);\n}\n\nconst themoviedbAPI = {\n    fetchTrendingMovies,\n    fetchByName,\n    fetchFilmDetails,\n    fetchFilmReviews,\n    fetchFilmCredits,\n}\n\nexport default themoviedbAPI;","export function mapper(hits) {\n    return hits.map(item => ({\n        id: item.id,\n        title: item.title,\n    })\n    )\n}","export function successMessage(message) {\n    console.log(message);\n}\nexport function alertMessage(message) {\n    console.log(message);\n}\nexport function errorMessage(message) {\n    console.log(message);\n}\n\nexport const messenger = {\n    successMessage,\n    alertMessage,\n    errorMessage,\n};\n\n"],"names":["MovieGallary","movies","location","useLocation","length","map","id","title","to","state","from","messenger","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","SearchBarFilm","onSubmitFormHandler","useState","setValue","className","styles","onSubmit","event","preventDefault","type","onChange","autoComplete","autoFocus","placeholder","STATUS","MoviesPage","setMovies","error","setError","status","setStatus","navigate","useNavigate","searchValue","URLSearchParams","search","get","useEffect","themoviedbAPI","then","results","prev","mapper","catch","trim","seachParam","query","toLowerCase","createSearchParams","toString","configSearchParams","Loader","url","fetch","response","ok","json","Promise","reject","Error","API_KEY","BASE_URL","DEFAULT_LANGUAGE","fetchTrendingMovies","page","http","fetchByName","language","fetchFilmDetails","movieId","fetchFilmReviews","fetchFilmCredits","hits","item","successMessage","message","console","log","alertMessage","errorMessage"],"sourceRoot":""}